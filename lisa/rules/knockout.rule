rule lisa_in_silico_knockout_motif_99:
    input:
        coef="{sample}.{epigenome}.coefs.csv",
        background="{sample}.back_gene.rank.csv",
        foreground="{sample}.fore_gene.rank.csv"
    output:
        "{sample}.{epigenome}.motif99.csv"
    message: "lisa In silico Knockout motif..."
    benchmark:
        "{sample}.{epigenome}.motif99.knockout.benchmark.txt"
    log: "{sample}.log"
    params: species=config["species"], prefix="{sample}",
            cov=config['covariates']
    shell:
        "lisa_rank_tfs knockout --species {params.species}  --epigenome {wildcards.epigenome} --covariates={params.cov} --coefficient {input.coef} --background {input.background} --foreground {input.foreground} --prefix {params.prefix} --dtype motif99 2>&1>>{log}"

rule lisa_in_silico_knockout_tf_chipseqpeak:
    input:
        coef="{sample}.{epigenome}.coefs.csv",
        background="{sample}.back_gene.rank.csv",
        foreground="{sample}.fore_gene.rank.csv"
    output:
        "{sample}.{epigenome}.chipseq.csv"
    message: "lisa In silico Knockout chip-seq ..."
    benchmark:
        "{sample}.{epigenome}.chipseq.knockout.benchmark.txt"
    log: "{sample}.log"
    params: species=config["species"], prefix="{sample}",
            cov=config['covariates']
    shell:
        "lisa_rank_tfs knockout --species {params.species}  --epigenome {wildcards.epigenome} --covariates={params.cov} --coefficient {input.coef} --background {input.background} --foreground {input.foreground} --prefix {params.prefix} --dtype chipseq 2>&1>>{log}"
